[user]
    email = davidcheung@live.ca
    name = David Cheung
[alias]
    a = add -u
    b = branch -vv -a
	check-whitespace = !git diff-tree --check $(git hash-object -t tree /dev/null) HEAD
	br = branch -vv
	brr = for-each-ref --sort=-committerdate refs/heads/ --format="%(authordate:short)%09%(objectname:short)%09%1B[0;33m%(refname:short)%1B[m%09"
	ci = commit
	co = checkout
    cob = checkout -b
    dump = cat-file -p
	f = fetch --prune --all
    fx = commit --fixup HEAD --no-verify
    l = log --pretty=format:'%C(yellow)%h%C(auto,magenta)%>(12,trunc)%ad %Cblue%an%Cgreen%d %Creset%s' --date=relative
    lg = log --stat --decorate
	mff = merge --ff-only
	p = pull --rebase
	pff = pull --ff-only
	pick = cherry-pick
	push = push --no-verify
    pu = push --no-verify
	puuuuuuuuu = push --no-verify
    rbc = rebase --continue
	rba = rebase --abort
	rbi = rebase -i origin/master --autosquash
	rbia = rebase -i origin/master --autosquash
	remotes = remote -v show
	s = status --short
	st = status
	tg = show-ref --tags
	tree = log --graph --oneline --decorate --simplify-by-decoration --branches
	type = cat-file -t
    wdiff = diff --word-diff
	ll = log --pretty=format:'%C(yellow)%h %C(auto,magenta)%>(12,trunc)%ad %Cblue%an%Cgreen%d %Creset%s' --date=relative HEAD...HEAD~10
	ls = "!f() { git log --oneline --pretty=format:'%C(yellow)%h%C(auto,magenta)%>(12,trunc)%ad %Cblue%an%Cgreen%d %Creset%s' --date=relative HEAD...HEAD~${1}; }; f"
    logg = log --pretty=format:'%C(yellow)%h %C(auto,magenta)%>(12,trunc)%ad %Cblue%an%Cgreen%d %Creset%s' --date=relative
[core]
	excludesfile = ~/.gitignore
	whitespace = fix
[commit]
	gpgSign = true
